plugins {
	id "fabric-loom" version "0.5-SNAPSHOT"
    id "maven-publish"
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archive_name
version = "mc" + project.minecraft_version + "-" + project.mod_version
group = project.maven_group

minecraft {

}

repositories {
    jcenter()
}

def apiModules = [
        "fabric-api-base",
        "fabric-loot-tables-v1",
        "fabric-resource-loader-v0",
        "fabric-tool-attribute-api-v1",
        "fabric-tag-extensions-v0"
]

dependencies {
    compileOnly "com.google.code.findbugs:jsr305:3.0.2"
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    apiModules.each { module -> modApi include(fabricApi.module(module, project.fabric_version)) }

    modRuntime("io.github.prospector:modmenu:${project.mod_menu_version}") { 
		transitive(false) 
	}
}

processResources {
    // this will ensure that this task is redone when there"s a change
    inputs.property "version", project.version

    // replace stuff in fabric.mod.json, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"

        // add mod metadata
        expand "version": project.version
    }

    // copy everything else, that"s not the fabric.mod.json
    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE.md"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar)
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {

    }
}
